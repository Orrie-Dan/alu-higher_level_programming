import unittest
from add_integer import add_integer

class TestAddInteger(unittest.TestCase):
    
    def test_add_integers(self):
        self.assertEqual(add_integer(1, 2), 3)
        self.assertEqual(add_integer(1, -2), -1)
        self.assertEqual(add_integer(1.4, 2), 3)
        self.assertEqual(add_integer(1, 1.5), 2)
        self.assertEqual(add_integer(1, 98), 99)
    
    def test_type_error(self):
        with self.assertRaises(TypeError):
            add_integer(1, "2")
        with self.assertRaises(TypeError):
            add_integer([1], 2)
        with self.assertRaises(TypeError):
            add_integer(1, [2])
    
    def test_nan_error(self):
        with self.assertRaises(TypeError):
            add_integer(float('nan'), 1)
    
    def test_missing_argument(self):
        self.assertEqual(add_integer(1), 99)
    
    def test_large_numbers(self):
        self.assertEqual(add_integer(1e100, 2e100), 3e100)
        self.assertEqual(add_integer(999999999999999999999, 1000000000000000000000), 1999999999999999999999)

if __name__ == '__main__':
    unittest.main() 

